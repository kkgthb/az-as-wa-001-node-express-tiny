trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:

# Note:  While you could replace the inputs as follows:
#   inputs:
#     versionSource: fromFile
#     versionFilePath: './.nvmrc'
# and create an ".nvmrc" file whose contents read "lts/*"
# instead of hard-coding something like "18.x",
# you shouldn't, because Azure Web App hosting might not 
# support the Node.js version you're building a runtime for 
# quite as early as NodeTool@0 will install a Node.js version into your short-lived "build machine".
# https://social.msdn.microsoft.com/Forums/en-US/ed62e95d-7e04-4936-bf3f-6699e2d00a9e/which-node-versions-are-currently-supported-on-azure?forum=windowsazurewebsitespreview
# Oh.  lol, that and I just tried it after writing this message and got a pipeline error during this step saying 
# "Unable to find Node version lts/* for platform linux and architecture x64"
# So there you go.  You have to at least specify a major version number of Node to build your runtime out of 
# as part of your build CI/CD pipeline.
# And you definitely don't want to leave "versionSpec" blank because NodeTool's default is in the 6's even when I wrote this 
# and the latest LTS was in the 18's!
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

- script: npm install
  displayName: 'Install node module dependencies from NPM'

- script: npm run build
  displayName: 'Build source code into a runtime'

- task: CopyFiles@2
  inputs:
    SourceFolder: './dist'
    Contents: '**/*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Copy runtime into root of build-artifact staging directory'

- task: PublishBuildArtifacts@1
  inputs:
    PathToPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'MyBuiltWebsite'
  displayName: 'Publish build-artifact from staging directory to named artifact'
